= Spring Boot support
Andrey Hihlovskiy
2014-05-29
:sectanchors:
:jbake-type: page
:jbake-status: published

Since version 0.0.24 Gretty supports Spring Boot web-apps out-of-the-box.
All Gretty features, including (but not limited to) debugging,
code coverage and integration tests, also apply to spring-boot web-apps. 
See more information below.

== Simplest Gretty setup with Spring Boot 

Add the following code to "build.gradle":

[source,groovy]
----
buildscript {
  ext {
    springBootVersion = '1.1.0.RELEASE'
  }
  
  repositories {
    mavenLocal()
    jcenter()
  }

  dependencies {
    classpath "org.springframework.boot:spring-boot-loader-tools:${springBootVersion}"
    classpath "org.springframework.boot:spring-boot-dependency-tools:${springBootVersion}"
    classpath 'org.akhikhl.gretty:gretty-spring-boot-plugin:0.0.24'
  }
}

apply plugin: 'gretty-spring-boot'
----

Now you can run your Spring Boot application with the command `gradle jettyRun`.

The complete sources for the simplest Gretty Spring Boot setup:

* https://github.com/akhikhl/gretty/tree/master/examples/spring-boot-simple[spring-boot-simple]

== Gretty configuration and Spring Boot

"gretty-spring-boot" plugin facilitates your project with the same link:Gretty-configuration.html[gretty configuration],
as "gretty" plugin. You can set the same properties, like "contextPath", "port", etc. etc. - they all
will be passed to the Jetty server and web-app.

== Gretty tasks and Spring Boot

"gretty-spring-boot" plugin implements all gretty tasks except those with "War" word in the name.
For example, there are tasks "jettyRun", "jettyRunDebug", "jettyStart", "jettyStop", etc.

== Gretty hot-deployment and Spring Boot

Gretty uses https://github.com/spring-projects/spring-loaded[spring-loaded] library for smooth reload
of running Spring Boot applications. As soon as you change the sources, the project gets 
automatically recompiled and web-app reloads with updated classes.

Gretty also supports link:Fast-reload.html[Fast reload] feature with Spring Boot web-apps.

== Gretty webapp-overlays and Spring Boot

Webapp-overlays are technically possible with Gretty and Spring Boot, but author of Gretty plugin
did not test this feature yet. See more information in link:Web-app-overlays.html[Web-app overlays] section.

== Gretty HTTPS support and Spring Boot

Gretty fully supports link:HTTPS-support.html[HTTPS] with Spring Boot web-apps.

== Gretty debugging, testing, logging and Spring Boot

Gretty fully supports link:Debugger-support.html[debugging] of Spring Boot web-apps.

Gretty fully supports link:Integration-tests-support.html[integration tests] with Spring Boot web-apps.

Gretty fully supports link:Code-coverage-support.html[Jacoco code coverage] with Spring Boot web-apps.

Gretty fully supports link:Logging.html[logging] of Spring Boot web-apps.

== Gretty Jetty-specific features and Spring Boot

Gretty fully supports link:Security-realms.html[Jetty security Realms] with Spring Boot web-apps.

Gretty fully supports link:jetty.xml-support.html[jetty.xml] with Spring Boot web-apps.

Gretty fully supports link:jetty-env.xml-support.html[jetty-env.xml] with Spring Boot web-apps.

== Gretty multiple web-apps and Spring Boot

Gretty supports running multiple web-apps on so-called link:Multiple-web-apps-introduction.html[farms].
Web-apps can be Spring Boot or "normal", in any combinations - Gretty will sort them out.

Gretty contains example program, showing multi-web-app setup with Spring Boot:

* https://github.com/akhikhl/gretty/tree/master/examples/spring-boot-farm[spring-boot-farm]

== Gretty multiple Jetty versions and Spring Boot

Gretty supports running Spring Boot web-apps on Jetty 8 and 9. Running against Jetty 7 is not supported,
since Spring Boot uses servlet-api 3.x, which is not compatible with Jetty 7.

If you want to run Spring Boot web-apps against Jetty 8:

[source,groovy]
----
buildscript {
  ext {
    springBootVersion = '1.1.0.RELEASE'
  }
  
  repositories {
    mavenLocal()
    jcenter()
  }

  dependencies {
    classpath "org.springframework.boot:spring-boot-loader-tools:${springBootVersion}"
    classpath "org.springframework.boot:spring-boot-dependency-tools:${springBootVersion}"
    classpath 'org.akhikhl.gretty:gretty8-spring-boot-plugin:0.0.24'
  }
}

apply plugin: 'gretty8-spring-boot'
----

If you want to run Spring Boot web-apps against Jetty 9:

[source,groovy]
----
buildscript {
  ext {
    springBootVersion = '1.1.0.RELEASE'
  }
  
  repositories {
    mavenLocal()
    jcenter()
  }

  dependencies {
    classpath "org.springframework.boot:spring-boot-loader-tools:${springBootVersion}"
    classpath "org.springframework.boot:spring-boot-dependency-tools:${springBootVersion}"
    classpath 'org.akhikhl.gretty:gretty9-spring-boot-plugin:0.0.24'
  }
}

apply plugin: 'gretty9-spring-boot'
----

The example at the beginning of this page does not refer specific Jetty version. In this case the latest officially supported Jetty version is used (9 at the moment of writing).
