= Multiple web-apps introduction

Since version 0.0.18 Gretty supports link:Multiple-web-apps-introduction[multiple web-apps feature]: it can start arbitrary number of web-apps on the same Jetty server. Gretty supports web-apps of various types: link:Farm-web-app-list#Project-web-app-references[gradle projects], link:Farm-web-app-list#File-based-web-app-references[WAR-files in the file system] and even link:Farm-web-app-list#Repository-based-web-app-references[WAR-files from maven dependencies].

Multiple web-apps feature works out-of-the-box in link:Multiple-web-apps-configureless-setup[configureless mode], although it is fully link:index#Multiple-web-apps-configuration[configurable/customizable].

Multiple web-apps feature also works nicely with integration tests and with the debugger.

The central concept of Multiple web-apps feature is *farm* - a collection of web-apps, that should run together.

There are two ways to define and use farms:

* Default farm is automatically created for you by Gretty. You may add artbitrary web-apps to it and then invoke farm-specific tasks: farmRun, farmRunDebug, etc. Note that farm-specific tasks are not using gretty tasks (jettyRun, jettyRunDebug, etc.), but they understand and use gretty configurations.

* Named farms, which you create yourself in gradle script. You can add as many named farms as you want, and you can add web-apps to farms in arbitrary constellations. Each named farm provides a specific set of farm tasks. For example, if you define farm with name "XYZ", there will be new tasks farmRunXYZ, farmRunDebugXYZ, etc. available.

You can start using multiple web-apps support right away. Take link:Multiple-web-apps-configureless-setup[Multiple web apps configureless setup] as a starting point.
